{"version":3,"file":"static/js/113.d061b75b.chunk.js","mappings":"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","sources":["components/CastItem/CastItem.styled.jsx","components/CastItem/CastItem.js","components/CastList/CastList.js","components/Cast/Cast.js","components/CastList/CastList.styled.jsx","components/services/API.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CastThumb = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  position: relative;\n  margin-bottom: ${props => props.theme.space[4]}px;\n  height: 100%;\n`;\n\nexport const CastItemPictureThumb = styled.div`\n  position: relative;\n  height: 370px;\n`;\n\nexport const CastItemTextThumb = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center;\n  gap: ${props => props.theme.space[1]}px;\n  padding: 6px 12px;\n  flex-grow: 1;\n\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 1.5;\n\n  border-left: 1px solid #eee;\n  border-right: 1px solid #eee;\n  border-bottom: 1px solid #eee;\n`;\n","import { picturePathPlace } from 'components/services/API';\nimport {\n  CastItemPictureThumb,\n  CastItemTextThumb,\n  CastThumb,\n} from './CastItem.styled';\n\nexport function CastItem({ name, character, profile_path }) {\n  return (\n    <CastThumb>\n      <CastItemPictureThumb>\n        <img src={picturePathPlace(profile_path)} alt={name} />\n      </CastItemPictureThumb>\n      <CastItemTextThumb>\n        <p>Name: {name}</p>\n        <p>Character: {character}</p>\n      </CastItemTextThumb>\n    </CastThumb>\n  );\n}\n","import { CastItem } from 'components/CastItem/CastItem';\nimport { CastCatalogue, CastCatalogueTitle } from './CastList.styled';\n\nexport function CastList({ cast }) {\n  return (\n    <>\n      <CastCatalogueTitle>Full cast</CastCatalogueTitle>\n      <CastCatalogue>\n        {cast.map(({ name, character, profile_path }) => {\n          return (\n            <CastItem\n              key={name}\n              name={name}\n              character={character}\n              profile_path={profile_path}\n            />\n          );\n        })}\n      </CastCatalogue>\n    </>\n  );\n}\n","import { Fragment, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { CastList } from 'components/CastList/CastList';\nimport { SearchMoviesAPI } from 'components/services/API';\n\nconst MoviesAPI = new SearchMoviesAPI();\n\nexport function Cast() {\n  const [cast, setCast] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    MoviesAPI.searchMovieCredits(movieId).then(resolve => {\n      setCast(resolve.data.cast);\n    });\n  }, [movieId]);\n\n  return (\n    <Fragment>\n      {cast && (\n        <div>\n          {cast.length === 0 ? (\n            <div>We don't have any information about this movie crew</div>\n          ) : (\n            <CastList cast={cast} />\n          )}\n        </div>\n      )}\n    </Fragment>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const CastCatalogue = styled.ul`\n  display: grid;\n  max-width: calc(100% - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));\n  grid-gap: 18px;\n  margin-top: 0;\n  margin-bottom: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\nexport const CastCatalogueTitle = styled.h2`\n  text-align: center;\n  font-size: 28px;\n  margin-bottom: 18px;\n`;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = '3c17396434cbeb8bf43dc0291bcf9df1';\n\nexport class SearchMoviesAPI {\n  searchTrendingMovies = async page => {\n    const url = `trending/movie/week?api_key=${KEY}&page=${page}`;\n    try {\n      const response = await axios.get(url);\n      return response;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  searchMovies = async (page, searchQuery) => {\n    const url = `search/movie?api_key=${KEY}&query=${searchQuery}&page=${page}`;\n    try {\n      const response = await axios.get(url);\n      return response;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  searchMovieDetails = async movieId => {\n    const url = `movie/${movieId}?api_key=${KEY}`;\n    try {\n      const response = await axios.get(url);\n      return response;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  searchMovieCredits = async movieId => {\n    const url = `movie/${movieId}/credits?api_key=${KEY}`;\n    try {\n      const response = await axios.get(url);\n      return response;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  searchMovieReviews = async movieId => {\n    const url = `movie/${movieId}/reviews?api_key=${KEY}`;\n    try {\n      const response = await axios.get(url);\n      return response;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  searchGenres = async () => {\n    const url = `genre/movie/list?api_key=${KEY}`;\n    try {\n      const response = await axios.get(url);\n      return response;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\n\nexport function titleOptimizer(title, name) {\n  if (title) {\n    return title;\n  }\n\n  if (name) {\n    return name;\n  }\n\n  return 'The best film in your life! :)';\n}\n\nexport function dateOptimizer(releaseDate, firstDate) {\n  if (releaseDate) {\n    return releaseDate.slice(0, 4);\n  }\n\n  if (firstDate) {\n    return firstDate.slice(0, 4);\n  }\n\n  return 'Coming soon! :)';\n}\n\nexport function picturePathPlace(path) {\n  if (path == null) {\n    return 'https://via.placeholder.com/500x600.svg/000000/ffffff?text=Sorry+,+image+loading+is+failed';\n  }\n\n  return `https://image.tmdb.org/t/p/w500${path}`;\n}\n\nexport function findGenres(genres, genreIds) {\n  const genresArray = [];\n\n  if (!genreIds) {\n    return 'Other';\n  }\n\n  for (let id of genreIds) {\n    let item = genres.find(genre => genre.id === id);\n    if (item === undefined) {\n      continue;\n    } else {\n      genresArray.push(item.name);\n    }\n  }\n\n  if (genresArray.length === 0) {\n    genresArray.push('Other');\n  }\n\n  if (genresArray.length > 3) {\n    return [genresArray[0], genresArray[1], 'Other'].join(', ');\n  }\n\n  return genresArray.join(', ');\n}\n\nexport function movieDetailsGenres(genres) {\n  const genresArray = [];\n\n  for (let genre of genres) {\n    genresArray.push(genre.name);\n  }\n\n  if (genresArray.length === 0) {\n    return 'Other';\n  }\n\n  if (genresArray.length > 3) {\n    return [genresArray[0], genresArray[1], 'Other'].join(', ');\n  }\n\n  return genresArray.join(', ');\n}\n"],"names":["CastThumb","styled","_templateObject","_taggedTemplateLiteral","props","theme","space","CastItemPictureThumb","_templateObject2","CastItemTextThumb","_templateObject3","CastItem","_ref","name","character","profile_path","_jsxs","children","_jsx","src","picturePathPlace","alt","CastList","cast","_Fragment","CastCatalogueTitle","CastCatalogue","map","_ref2","MoviesAPI","SearchMoviesAPI","Cast","_useState","useState","_useState2","_slicedToArray","setCast","movieId","useParams","useEffect","searchMovieCredits","then","resolve","data","Fragment","length","axios","KEY","_createClass","_classCallCheck","searchTrendingMovies","_asyncToGenerator","_regeneratorRuntime","_callee","page","url","response","_context","prev","next","concat","sent","abrupt","t0","console","log","stop","_x","apply","arguments","searchMovies","_callee2","searchQuery","_context2","_x2","_x3","searchMovieDetails","_ref3","_callee3","_context3","_x4","_ref4","_callee4","_context4","_x5","searchMovieReviews","_ref5","_callee5","_context5","_x6","searchGenres","_callee6","_context6","titleOptimizer","title","dateOptimizer","releaseDate","firstDate","slice","path","findGenres","genres","genreIds","genresArray","_step","_iterator","_createForOfIteratorHelper","_loop","id","value","item","find","genre","undefined","push","s","n","done","err","e","f","join","movieDetailsGenres","_step2","_iterator2"],"sourceRoot":""}