{"version":3,"file":"static/js/29.1c0699af.chunk.js","mappings":"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","sources":["components/Finish/Finish.styled.jsx","components/Finish/Finish.js","Box.js","components/Movie/Movie.styled.jsx","components/Movie/Movie.js","components/MoviesList/MovieList.styled.jsx","components/MoviesList/MoviesList.js","components/services/API.js","components/SearchBox/SearchBox.styled.jsx","components/SearchBox/SearchBox.js","pages/Movies/Movies.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { GiFinishLine } from 'react-icons/gi';\n\nexport const FinishText = styled.p`\n  font: inherit;\n  font-size: 18px;\n`;\n\nexport const FinishContainer = styled.div`\n  margin: 36px auto;\n`;\n\nexport const FinishIcon = styled(GiFinishLine)`\n  width: 48px;\n  fill: tomato;\n`;\n","import { FinishContainer, FinishText, FinishIcon } from './Finish.styled';\n\nexport function Finish() {\n  return (\n    <FinishContainer>\n      <FinishText>\n        We're sorry, but you've reached the end of search results.\n        <FinishIcon />\n      </FinishText>\n    </FinishContainer>\n  );\n}\n","import styled from '@emotion/styled';\nimport {\n  space,\n  layout,\n  color,\n  typography,\n  flexbox,\n  shadow,\n  background,\n  border,\n  position,\n  grid,\n} from 'styled-system';\n\nconst Box = styled.div`\n  ${space}\n  ${layout}\n  ${color}\n  ${typography}\n  ${flexbox}\n  ${background}\n  ${border}\n  ${position}\n  ${shadow}\n  ${grid}\n`;\n\nexport default Box;\n","import styled from '@emotion/styled';\n\nexport const MovieListItemContainer = styled.div`\n  max-width: 500px;\n  border-radius: 5px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  height: 100%;\n  overflow: hidden;\n\n  &:hover {\n    transform: scale(1.03);\n    cursor: pointer;\n  }\n`;\n\nexport const MovieListItemImage = styled.div`\n  position: relative;\n  margin-bottom: ${props => props.theme.space[3]}px;\n  height: 500px;\n`;\n\nexport const MoviesListData = styled.div`\n  padding: 0 10px 10px 10px;\n`;\n\nexport const MovieHeading = styled.h2`\n  margin-bottom: ${props => props.theme.space[2]}px;\n`;\n\nexport const MovieData = styled.p`\n  display: flex;\n  align-items: center;\n  gap: ${props => props.theme.space[1]}px;\n`;\n","import {\n  findGenres,\n  dateOptimizer,\n  picturePathPlace,\n  titleOptimizer,\n} from 'components/services/API';\n\nimport {\n  MovieListItemContainer,\n  MovieListItemImage,\n  MoviesListData,\n  MovieHeading,\n  MovieData,\n} from './Movie.styled';\n\nexport function Movie({ movieInfo, genres }) {\n  const { poster_path, title, name, genre_ids, release_date, first_air_date } =\n    movieInfo;\n  return (\n    <MovieListItemContainer>\n      <MovieListItemImage>\n        <img\n          src={picturePathPlace(poster_path)}\n          alt={titleOptimizer(title, name)}\n        />\n      </MovieListItemImage>\n      <MoviesListData>\n        <MovieHeading>{titleOptimizer(title, name)}</MovieHeading>\n        <MovieData>\n          <span>{findGenres(genres, genre_ids)}</span>\n          <span>&#10072;</span>\n          <span>{dateOptimizer(release_date, first_air_date)}</span>\n        </MovieData>\n      </MoviesListData>\n    </MovieListItemContainer>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const MovieList = styled.ul`\n  display: grid;\n  max-width: calc(100% - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 24px;\n  margin-top: 0;\n  margin-bottom: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import { Link, useLocation } from 'react-router-dom';\n\nimport Box from 'Box';\nimport { Movie } from 'components/Movie/Movie';\nimport { MovieList } from './MovieList.styled';\n\nexport function MoviesList({ movies, genres, from }) {\n  const location = useLocation();\n  return (\n    <Box p={4}>\n      <MovieList>\n        {from === 'home'\n          ? movies.map(movie => {\n              return (\n                <li key={movie.id}>\n                  <Link to={`movies/${movie.id}`} state={{ from: location }}>\n                    <Movie movieInfo={movie} genres={genres} />\n                  </Link>\n                </li>\n              );\n            })\n          : movies.map(movie => {\n              return (\n                <li key={movie.id}>\n                  <Link to={`${movie.id}`} state={{ from: location }}>\n                    <Movie movieInfo={movie} genres={genres} />\n                  </Link>\n                </li>\n              );\n            })}\n      </MovieList>\n    </Box>\n  );\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = '3c17396434cbeb8bf43dc0291bcf9df1';\n\nexport class SearchMoviesAPI {\n  searchTrendingMovies = async page => {\n    const url = `trending/movie/week?api_key=${KEY}&page=${page}`;\n    try {\n      const response = await axios.get(url);\n      return response;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  searchMovies = async (page, searchQuery) => {\n    const url = `search/movie?api_key=${KEY}&query=${searchQuery}&page=${page}`;\n    try {\n      const response = await axios.get(url);\n      return response;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  searchMovieDetails = async movieId => {\n    const url = `movie/${movieId}?api_key=${KEY}`;\n    try {\n      const response = await axios.get(url);\n      return response;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  searchMovieCredits = async movieId => {\n    const url = `movie/${movieId}/credits?api_key=${KEY}`;\n    try {\n      const response = await axios.get(url);\n      return response;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  searchMovieReviews = async movieId => {\n    const url = `movie/${movieId}/reviews?api_key=${KEY}`;\n    try {\n      const response = await axios.get(url);\n      return response;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  searchGenres = async () => {\n    const url = `genre/movie/list?api_key=${KEY}`;\n    try {\n      const response = await axios.get(url);\n      return response;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\n\nexport function titleOptimizer(title, name) {\n  if (title) {\n    return title;\n  }\n\n  if (name) {\n    return name;\n  }\n\n  return 'The best film in your life! :)';\n}\n\nexport function dateOptimizer(releaseDate, firstDate) {\n  if (releaseDate) {\n    return releaseDate.slice(0, 4);\n  }\n\n  if (firstDate) {\n    return firstDate.slice(0, 4);\n  }\n\n  return 'Coming soon! :)';\n}\n\nexport function picturePathPlace(path) {\n  if (path == null) {\n    return 'https://via.placeholder.com/500x600.svg/000000/ffffff?text=Sorry+,+image+loading+is+failed';\n  }\n\n  return `https://image.tmdb.org/t/p/w500${path}`;\n}\n\nexport function findGenres(genres, genreIds) {\n  const genresArray = [];\n\n  if (!genreIds) {\n    return 'Other';\n  }\n\n  for (let id of genreIds) {\n    let item = genres.find(genre => genre.id === id);\n    if (item === undefined) {\n      continue;\n    } else {\n      genresArray.push(item.name);\n    }\n  }\n\n  if (genresArray.length === 0) {\n    genresArray.push('Other');\n  }\n\n  if (genresArray.length > 3) {\n    return [genresArray[0], genresArray[1], 'Other'].join(', ');\n  }\n\n  return genresArray.join(', ');\n}\n\nexport function movieDetailsGenres(genres) {\n  const genresArray = [];\n\n  for (let genre of genres) {\n    genresArray.push(genre.name);\n  }\n\n  if (genresArray.length === 0) {\n    return 'Other';\n  }\n\n  if (genresArray.length > 3) {\n    return [genresArray[0], genresArray[1], 'Other'].join(', ');\n  }\n\n  return genresArray.join(', ');\n}\n","import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\nimport { GoSearch } from 'react-icons/go';\n\nexport const SearchIcon = styled(GoSearch)`\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nexport const SearchbarContainer = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const SearchForm = styled(Form)`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  border: 1px solid #e9e8e8;\n  overflow: hidden;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const SearchFormButton = styled.button`\n  position: relative;\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchFormButtonLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const SearchFormInput = styled(Field)`\n  display: inline-block;\n  width: 100%;\n  height: 48px;\n  font: inherit;\n  font-size: 20px;\n  outline: none;\n  border: none;\n  padding-left: 16px;\n  padding-right: 16px;\n\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import { Formik } from 'formik';\n\nimport {\n  SearchIcon,\n  SearchForm,\n  SearchbarContainer,\n  SearchFormButton,\n  SearchFormButtonLabel,\n  SearchFormInput,\n} from './SearchBox.styled';\n\nconst initialValues = { search: '' };\n\nexport function SearchBox({ onSubmit, value }) {\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={(values, actions) => {\n          actions.setFieldValue('search', value);\n          actions.setSubmitting(false);\n          actions.resetForm();\n          onSubmit(values.search);\n        }}\n      >\n        {({ isSubmitting }) => {\n          return (\n            <SearchbarContainer>\n              <SearchForm>\n                <SearchFormInput\n                  type=\"text\"\n                  autoComplete=\"off\"\n                  name=\"search\"\n                  placeholder=\"Search films and serials\"\n                />\n                <SearchFormButton type=\"submit\" disabled={isSubmitting}>\n                  <SearchIcon />\n                  <SearchFormButtonLabel>Search</SearchFormButtonLabel>\n                </SearchFormButton>\n              </SearchForm>\n            </SearchbarContainer>\n          );\n        }}\n      </Formik>\n    </>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { SearchBox } from 'components/SearchBox/SearchBox';\nimport { SearchMoviesAPI } from 'components/services/API';\nimport { Finish } from 'components/Finish/Finish';\n\nconst MoviesAPI = new SearchMoviesAPI();\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [genres, setGenres] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(null);\n  const [isRendered, setIsRendered] = useState(false);\n  const [searchQuery, setSearchQuery] = useSearchParams();\n  const filmTitle = searchQuery.get('name') ?? '';\n  const from = 'movies';\n\n  useEffect(() => {\n    MoviesAPI.searchGenres().then(response => setGenres(response.data.genres));\n  }, []);\n\n  useEffect(() => {\n    if (filmTitle === '' || !isRendered) {\n      setIsRendered(true);\n      return;\n    }\n\n    MoviesAPI.searchMovies(page, filmTitle).then(response => {\n      setTotalPages(response.data.total_pages);\n      if (response.data.results.length > 0) {\n        toast.success(\n          `Hooray! We found ${response.data.total_results} movies`,\n          {\n            autoClose: 3000,\n          }\n        );\n        setMovies(prevMovies => [...prevMovies, ...response.data.results]);\n      } else {\n        toast.warn('Nothing found for your request', {\n          autoClose: 3000,\n        });\n      }\n    });\n  }, [page, filmTitle, isRendered]);\n\n  const submitHandler = query => {\n    const filmName =\n      query.trim() !== ''\n        ? { name: query }\n        : {} &&\n          toast.error('Sorry, search field if empty :(', { autoClose: 3000 });\n\n    if (query !== filmName) {\n      setMovies([]);\n      setPage(1);\n    }\n\n    setSearchQuery(filmName);\n  };\n\n  const scrollHandler = () => {\n    const { scrollHeight, clientHeight, scrollTop } = document.documentElement;\n\n    if (clientHeight + scrollTop + 1 >= scrollHeight) {\n      setPage(prevPage => prevPage + 1);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', scrollHandler);\n    return () => window.removeEventListener('scroll', scrollHandler);\n  }, []);\n\n  return (\n    <div>\n      <SearchBox value={filmTitle} onSubmit={submitHandler} />\n      {movies.length !== 0 && (\n        <div>\n          <MoviesList movies={movies} genres={genres} from={from} />\n        </div>\n      )}\n      {page === totalPages && <Finish />}\n    </div>\n  );\n};\nexport default Movies;\n"],"names":["FinishText","styled","_templateObject","_taggedTemplateLiteral","FinishContainer","_templateObject2","FinishIcon","GiFinishLine","_templateObject3","Finish","_jsx","children","_jsxs","space","layout","color","typography","flexbox","background","border","position","shadow","grid","MovieListItemContainer","MovieListItemImage","props","theme","MoviesListData","MovieHeading","_templateObject4","MovieData","_templateObject5","Movie","_ref","movieInfo","genres","poster_path","title","name","genre_ids","release_date","first_air_date","src","picturePathPlace","alt","titleOptimizer","findGenres","dateOptimizer","MovieList","MoviesList","movies","from","location","useLocation","Box","p","map","movie","Link","to","concat","id","state","axios","KEY","SearchMoviesAPI","_createClass","_classCallCheck","searchTrendingMovies","_asyncToGenerator","_regeneratorRuntime","_callee","page","url","response","_context","prev","next","sent","abrupt","t0","console","log","stop","_x","apply","arguments","searchMovies","_ref2","_callee2","searchQuery","_context2","_x2","_x3","searchMovieDetails","_ref3","_callee3","movieId","_context3","_x4","searchMovieCredits","_ref4","_callee4","_context4","_x5","searchMovieReviews","_ref5","_callee5","_context5","_x6","searchGenres","_callee6","_context6","releaseDate","firstDate","slice","path","genreIds","genresArray","_step","_iterator","_createForOfIteratorHelper","_loop","value","item","find","genre","undefined","push","s","n","done","err","e","f","length","join","movieDetailsGenres","_step2","_iterator2","SearchIcon","GoSearch","SearchbarContainer","SearchForm","Form","SearchFormButton","SearchFormButtonLabel","SearchFormInput","Field","_templateObject6","initialValues","search","SearchBox","onSubmit","_Fragment","Formik","values","actions","setFieldValue","setSubmitting","resetForm","isSubmitting","type","autoComplete","placeholder","disabled","MoviesAPI","_searchQuery$get","_useState","useState","_useState2","_slicedToArray","setMovies","_useState3","_useState4","setGenres","_useState5","_useState6","setPage","_useState7","_useState8","totalPages","setTotalPages","_useState9","_useState10","isRendered","setIsRendered","_useSearchParams","useSearchParams","_useSearchParams2","setSearchQuery","filmTitle","get","useEffect","then","data","total_pages","results","toast","total_results","autoClose","prevMovies","_toConsumableArray","scrollHandler","_document$documentEle","document","documentElement","scrollHeight","clientHeight","scrollTop","prevPage","window","addEventListener","removeEventListener","query","filmName","trim"],"sourceRoot":""}